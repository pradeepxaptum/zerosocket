{"name":"Zero Socket","tagline":"Implementation of ZeroSocket, a federated security protocol","body":"Zero Socket\r\n====\r\n\r\nZero Socket is a minimalistic socket interceptor.  It can be\r\neasily integrated into resource-limited or embedded projects.\r\n\r\nYou can find more information about Zero Socket format at [xaptum.com][1]\r\n\r\nLibrary sources are available at [github.com/xaptum/zerosocket][2]\r\n\r\n\r\nPhilosophy\r\n----------\r\n\r\nMost client side libraries are meant to add a protocol layer. However the socket\r\nand network layer needs to be managed independent of the \r\n\r\n\r\nFeatures\r\n--------\r\n\r\n* compatible with C++99 or later\r\n* standard dependencies (even libc , libc++)\r\n* highly portable (tested on x86/amd64, ARM)\r\n* extremely small code footprint\r\n* compile time control through -D options\r\n* no dynamic memory allocation\r\n* library code is covered with unit-tests\r\n\r\nDesign\r\n------\r\n\r\n\r\n\r\nInstall\r\n-------\r\n\r\nTo clone the repository you should have git client installed. Just run:\r\n\r\n\t$ git clone https://github.com/xaptum/zerosocket.git\r\n\r\n\r\n\r\nAPI\r\n---\r\n\r\n[Global variables & macros](Global-variables-&-macros)\r\n\r\n[enum ZSElement getZSElementIndex(const char * name) ;](getZSElementIndex())\r\n\r\n[const char * getZSVersion(void);](getZSVersion())\r\n\r\n[int zsocket (int family, int type, int protocol);](zsocket())\r\n\r\n[int zconnect(int sockfd, struct sockaddr *serv_addr, int addrlen);](zconnect())\r\n\r\n[int zbind(int sockfd, struct sockaddr *my_addr,int addrlen);](zbind())\r\n\r\n[int zlisten(int sockfd,int backlog);](zlisten())\r\n\r\n[int zaccept (int sockfd, struct sockaddr *cliaddr, socklen_t *addrlen);](zaccept())\r\n\r\n[int zsend(int sockfd, const void *msg, int len, int flags);](zsend())\r\n\r\n[int zrecv(int sockfd, void *buf, size_t len, int flags);](zrecv())\r\n\r\n[int zsendto(int sockfd, const void *msg, int len, int flags, const struct sockaddr *to, socklen_t tolen);](zsendto())\r\n\r\n[int zrecvfrom(int sockfd, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlen);](zrecvfrom())\r\n\r\n[int zclose( int sockfd );](zclose())\r\n\r\n\r\n\r\nOther info\r\n----------\r\n\r\nThis software is distributed under [GPLv2 license](http://www.gnu.org/licenses/gpl-2.0.html),\r\n so feel free to integrate it in your commercial products.\r\n\r\n[1]: http://xaptum.com/zerosocket\r\n[2]: https://github.com/bladeninja/zerosocket\r\n[3]: http://zserge.com/jsmn.html\r\n\r\n\r\nThanks to Serge Zaitsev for jsmn library (http://zserge.bitbucket.org/jsmn.html). I've included the source as is, but would be publishing enhancements in the near future.\r\n\r\nThis repository will be ready for use by Aug 20, 2014","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}